Kiemtra1: 
Kết quả là 3252.Vì  hàm main có printf đầu tiên có chứa giá trị x và x ở hàm main là 3 ,nên chương trình xuất ra 3 trước .Tiếp theo printf  của main có chứa Y.
Y ở đây được gọi và gán giá trị là 2.Khi xuất ra màn hình sẽ là 2
Tiếp theo là tới hàm void ham_a ,printf ở đây có chứa giá trị x mà x ở đây được gán giá trị là 5 nên khi chạy nó sẽ xuất ra màn hình là 5.
Printf cuối cùng có chứa giá trị y và y được gán giá trị là 2 .Nên khi được xuất ra màn hình sẽ là 2 
Nên khi xuất chương trình ra màn hình chúng ta sẽ có dòng số 3252.


Kiểm tra 2:
Câu a:
Khái niệm:Biến được sử dụng để lưu trữ một phần dữ liệu trong quá trình xử lý. Nó được gọi là biến vì bạn có thể thay đổi giá trị lưu trữ của nó.Chính xác hơn, một biến là một vị trí lưu trữ có tên và lưu trữ giá trị của một kiểu dữ liệu cụ thể. Nói cách khác một biến có tên, thuộc một kiểu dữ liệu xác định và lưu giá trị của kiểu dữ liệu đó.
Cú pháp khai báo biến:
Kiểu_dữ_liệu Tên_Biến;

Câu b:
Biến toàn cục :
Các biến được khai báo ở bên ngoài tất cả các hàm thì được gọi là biến toàn cục (external  or global variable). Các biến toàn cục có thể truy xuất và sử dụng ở mọi hàm trong chương trình. Biến toàn cục cũng tồn tại cho tới khi chương trình kết thúc.
Biến cục bộ
Các biến được khai báo trong 1 khối code thuộc lớp lưu trữ tự động (automatic or local variable) – hay chính là các biến cục bộ. Các biến cục bộ này chỉ tồn tại và chỉ có thể sử dụng bên trong khối code đó trong khi khối code đó đang thực thi.

Câu c:
Khái niệm:
Hàm là một nhóm các cấu lệnh cùng xử lý một nhiệm vụ cụ thể nào đó  .Mỗi chương trình có ít nhất 1 hàm -main().
Hàm có thể có sẵn của hệ thống  hoặc do người  lập trình tự định nghĩa như :TinhTong(),NhapGiaTri(),...
Trong một chương trình  thì các hàm có tên khác nhau để phân biệt chức năng mà nó thực hiện.
Trong C chương trình  con chỉ tồn tại dưới 1 dạng duy nhất là hàm chứ không phải thủ tục.
Phân loại:
Hàm có hai loại :hàm chuẩn và hàm tự định nghĩa.Trong chương trình ta chú trọng đến cách định nghĩa hàm và cách sử dụng hàm đó.   


